index.php

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" href="css.css">
    </head>
    <body>
        <div id="content">
            <div id="leftPart">
                <div id="subLeftPart">
                    <h1>T-rex Surfers</h1>
                    <?php
                    try
                    {
                        $db = new PDO('mysql:host=sql11.freesqldatabase.com:3306;dbname=sql11481224;charset=utf8', 'sql11481224', 'as7hUUwD7X');
                      $db->query("SET NAMES 'utf8'");
                      $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                    }
                    catch (Exception $e)
                    {
                      die('Erreur : ' . $e->getMessage());
                    }
                    
                    $score=2000;
                    if (isset($_POST['pseudo']) && strlen($_POST['pseudo'])<=10){
                      $pseudo=$_POST['pseudo'];
                      entrerScore($db, $pseudo, $score);
                      afficherScore($pseudo, $score);
                    }
                    elseif (isset($_POST['pseudo']) && strlen($_POST['pseudo'])>10){
                      echo "<script>alert(\"Le pseudo doit faire 10 caract√®res maximum\")</script>";
                    }
                    
                    function afficherTableauDesScores($db){
                      $requete=$db->prepare("select * from pseudos order by score desc limit 10");
                      $requete->execute();
                      $tab=$requete->fetchAll(PDO::FETCH_ASSOC);
                    
                      echo "<table id='score-table'><th>Rank</th><th>Pseudo</th><th>Score</th>";
                      $i = 1;
                      foreach($tab as $value){
                        if($i == 1){
                            echo "<tr><td id='crown'></td><td>".$value['pseudo']."</td><td>".$value['score']."</td></tr>";
                        }
                        else{
                            echo "<tr><td class='rank'>".$i."</td><td>".$value['pseudo']."</td><td>".$value['score']."</td></tr>";
                        }
                        $i++;
                      }
                      echo "</table>";
                    }
                    
                    function entrerScore($db, $pseudo, $score){
                        $requete=$db->prepare("select count(*) as nb from pseudos where pseudo='$pseudo'");
                        $requete->execute();
                        $tab=$requete->fetch(PDO::FETCH_ASSOC);
                        
                        if ($tab['nb']==0){
                            $requete=$db->prepare("insert into pseudos values ('$pseudo', '$score')");
                            echo "new<br>";
                        }
                        else {
                            $requete=$db->prepare("update pseudos set score='$score' where pseudo='$pseudo'");
                            echo "old<br>";
                        }
                        $requete->execute();
                    }
                    
                    function afficherScore($pseudo, $score){
                        echo $pseudo." ton score est ".$score."!!!<br>";
                    }
                    
                    afficherTableauDesScores($db);
                    ?>
                </div>
            </div>
            <div id="rightPart">
                <div id="subRightPart">
                    <form method="post" id="login-form">
                        <label for="pseudo">Enter your pseudo: </label>   
                        <input type="text" name="pseudo" id="pseudo" required>
                    </form>
                    <div id="game">
                        <div id="score">0</div>
                        <div id="dino"></div>
                    </div>
                </div>
            </div>
        </div>@font-face {
    font-family: T-rex;
    src: url('T-rex.ttf');
  }
  
  *{
    font-family: T-rex;
    /*border: 1px solid black;*/
  }

  body{
    background: url("coverture.png")
  }
  
  #content{
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border: 1px solid black;
    border-radius: 10px;
  }

  label{
    font-weight: 900;
  }

  #subRightPart{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  

  #login-form{
    padding: 20px 20px 20px 300px;
    font-size: 32px;
    border-radius: 10px;
  }
  
  #pseudo {
    position: relative;
    top: 50%;
    left: 10px;
    transform: translate(0, -10%);
  }
  
  #game {
    width: 1000px;
    height: 450px;
    border: 1px solid black;
    margin: auto 10px 20px auto ;
    position: relative;
    border-radius: 10px;
  }
  
  #dino {
    width: 80px;
    height: 50px;
    background-image: url(dino.gif);
    background-size: 80px 50px;
    position: absolute;
    left: 20px;
  }
  
  #score{
    font-size: 32px;
    position: absolute;
    top: 10px;
    left: 50%;
  }
  
  .cactus {
    width: 50px;
    height: 50px;
    position: absolute;
    left: -25px;
    margin: 0;
    background-image: url("asteroid.png");
    background-size: 50px 50px;
  }
  
  @keyframes block {
    0% {
      left: 950px;
    }
    100% {
      left: -50px;
    }
  }
  
  
  
  #subLeftPart{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  h1{
    margin: 0 0 0 30px;
    font-size: 4em;
    background-color: white;
    display: inline-block;
  }
  
  #score-table{
    font-size: 24px;
    padding: 10px 20px;
    color: black;  
  }

  #score-table tr th{
    background-color: black;
    color: white;
    text-align: center;
    min-width: 100px;
    border: 1px solid black;
  }
  
  #score-table tr td{
    text-align: center;
    min-width: 100px;
    padding: 5px;
    border: 1px solid black;
  }
  
  #crown{
    background: url("couronne.png") no-repeat center;
  }
  
  .rank{
    text-align: center;
  }
  
  script.js
  
  const game = document.getElementById("game");
const dino = document.getElementById("dino");
const scoreElem = document.getElementById("score");

let tabCactus = Create2DArray(5);

let tab = [0, 100, 200, 300, 400];
let i = 2;
let commonSpeed = 2;
let score = 0;
let lastLine = -1;

(Math.random() * 2 + commonSpeed)

dino.style.top = tab[i] + "px";

let spawnCactus = setInterval(function(){
  let a = Math.floor(Math.random() * 5);
  while(a === lastLine){
    a = Math.floor(Math.random() * 5);
  }
  if(a === 5){
    a = 4;
  }
  CreateACactus(a, Math.random() * 2 + commonSpeed);
  lastLine = a;
}, 500);

let checkPos = setInterval(function () {
  for (let t = 0; t < tabCactus.length; t++) {
    for (let c = 0; c < tabCactus[t].length; c++) {
      let cactusLeftPos = parseInt(window.getComputedStyle(tabCactus[t][c]).getPropertyValue("left"));
      if(cactusLeftPos <= -10){
        score++;
        scoreElem.innerHTML = score;
        tabCactus[t][c].parentNode.removeChild(tabCactus[t][c]);
        commonSpeed = 1.5 - (score/1000);
        console.log(commonSpeed);
      }
    }
  } 
  for (let m = 0; m < tabCactus[i].length; m++) {
    let cactusOnLineLeftPos = parseInt(window.getComputedStyle(tabCactus[i][m]).getPropertyValue("left"));
    if(cactusOnLineLeftPos <= 100 && cactusOnLineLeftPos >= 0){
      clearInterval(spawnCactus);
      clearInterval(checkPos);
      StopEverything();
    }
  }
}, 10);

document.addEventListener('keydown', function(e) {
  switch (e.code) {
    case "ArrowDown":
      if(i < 4){
        dino.style.top = tab[i + 1] + "px";
        i++;
      }
      break;
    case "ArrowUp":
      if(i > 0){
        dino.style.top = tab[i - 1] + "px";
        i--;
      }
      break;
  }
});

function StopEverything(){
  for (let d = 0; d < tabCactus.length; d++) {
    for (let j = 0; j < tabCactus[d].length; j++) {
      let pos = parseInt(window.getComputedStyle(tabCactus[d][j]).getPropertyValue("left"));
      tabCactus[d][j].style.animation = "";
      tabCactus[d][j].style.left = pos + "px";
    } 
  }
}

function CreateACactus(line, speed){
  let cactus = document.createElement("div");
  cactus.classList.add("cactus");
  cactus.style.top = tab[line] + "px";
  //cactus.style.left = 1200 + "px";
  cactus.style.animation = "block " + speed + "s linear";
  tabCactus[line][tabCactus[line].length] = cactus;
  game.appendChild(cactus);
}

function Create2DArray(rows) {
  let arr = [];

  for (let z=0; z<rows; z++) {
    arr[z] = [];
  }

  return arr;
}
        <script src="script.js"></script>
    </body>
</html>

index.css

@font-face {
    font-family: T-rex;
    src: url('T-rex.ttf');
  }
  
  *{
    font-family: T-rex;
    /*border: 1px solid black;*/
  }

  body{
    background: url("coverture.png")
  }
  
  #content{
    display: flex;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border: 1px solid black;
    border-radius: 10px;
  }

  label{
    font-weight: 900;
  }

  #subRightPart{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  

  #login-form{
    padding: 20px 20px 20px 300px;
    font-size: 32px;
    border-radius: 10px;
  }
  
  #pseudo {
    position: relative;
    top: 50%;
    left: 10px;
    transform: translate(0, -10%);
  }
  
  #game {
    width: 1000px;
    height: 450px;
    border: 1px solid black;
    margin: auto 10px 20px auto ;
    position: relative;
    border-radius: 10px;
  }
  
  #dino {
    width: 80px;
    height: 50px;
    background-image: url(dino.gif);
    background-size: 80px 50px;
    position: absolute;
    left: 20px;
  }
  
  #score{
    font-size: 32px;
    position: absolute;
    top: 10px;
    left: 50%;
  }
  
  .cactus {
    width: 50px;
    height: 50px;
    position: absolute;
    left: -25px;
    margin: 0;
    background-image: url("asteroid.png");
    background-size: 50px 50px;
  }
  
  @keyframes block {
    0% {
      left: 950px;
    }
    100% {
      left: -50px;
    }
  }
  
  
  
  #subLeftPart{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  h1{
    margin: 0 0 0 30px;
    font-size: 4em;
    background-color: white;
    display: inline-block;
  }
  
  #score-table{
    font-size: 24px;
    padding: 10px 20px;
    color: black;  
  }

  #score-table tr th{
    background-color: black;
    color: white;
    text-align: center;
    min-width: 100px;
    border: 1px solid black;
  }
  
  #score-table tr td{
    text-align: center;
    min-width: 100px;
    padding: 5px;
    border: 1px solid black;
  }
  
  #crown{
    background: url("couronne.png") no-repeat center;
  }
  
  .rank{
    text-align: center;
  }
  
  script.js
  
  const game = document.getElementById("game");
const dino = document.getElementById("dino");
const scoreElem = document.getElementById("score");

let tabCactus = Create2DArray(5);

let tab = [0, 100, 200, 300, 400];
let i = 2;
let commonSpeed = 2;
let score = 0;
let lastLine = -1;

(Math.random() * 2 + commonSpeed)

dino.style.top = tab[i] + "px";

let spawnCactus = setInterval(function(){
  let a = Math.floor(Math.random() * 5);
  while(a === lastLine){
    a = Math.floor(Math.random() * 5);
  }
  if(a === 5){
    a = 4;
  }
  CreateACactus(a, Math.random() * 2 + commonSpeed);
  lastLine = a;
}, 500);

let checkPos = setInterval(function () {
  for (let t = 0; t < tabCactus.length; t++) {
    for (let c = 0; c < tabCactus[t].length; c++) {
      let cactusLeftPos = parseInt(window.getComputedStyle(tabCactus[t][c]).getPropertyValue("left"));
      if(cactusLeftPos <= -10){
        score++;
        scoreElem.innerHTML = score;
        tabCactus[t][c].parentNode.removeChild(tabCactus[t][c]);
        commonSpeed = 1.5 - (score/1000);
        console.log(commonSpeed);
      }
    }
  } 
  for (let m = 0; m < tabCactus[i].length; m++) {
    let cactusOnLineLeftPos = parseInt(window.getComputedStyle(tabCactus[i][m]).getPropertyValue("left"));
    if(cactusOnLineLeftPos <= 100 && cactusOnLineLeftPos >= 0){
      clearInterval(spawnCactus);
      clearInterval(checkPos);
      StopEverything();
    }
  }
}, 10);

document.addEventListener('keydown', function(e) {
  switch (e.code) {
    case "ArrowDown":
      if(i < 4){
        dino.style.top = tab[i + 1] + "px";
        i++;
      }
      break;
    case "ArrowUp":
      if(i > 0){
        dino.style.top = tab[i - 1] + "px";
        i--;
      }
      break;
  }
});

function StopEverything(){
  for (let d = 0; d < tabCactus.length; d++) {
    for (let j = 0; j < tabCactus[d].length; j++) {
      let pos = parseInt(window.getComputedStyle(tabCactus[d][j]).getPropertyValue("left"));
      tabCactus[d][j].style.animation = "";
      tabCactus[d][j].style.left = pos + "px";
    } 
  }
}

function CreateACactus(line, speed){
  let cactus = document.createElement("div");
  cactus.classList.add("cactus");
  cactus.style.top = tab[line] + "px";
  //cactus.style.left = 1200 + "px";
  cactus.style.animation = "block " + speed + "s linear";
  tabCactus[line][tabCactus[line].length] = cactus;
  game.appendChild(cactus);
}

function Create2DArray(rows) {
  let arr = [];

  for (let z=0; z<rows; z++) {
    arr[z] = [];
  }

  return arr;
}
